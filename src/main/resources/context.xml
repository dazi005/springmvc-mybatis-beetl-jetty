<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-4.2.xsd
                           http://www.springframework.org/schema/aop 
						   http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
						   http://www.springframework.org/schema/tx 
						   http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="com.sdsj.audio" />
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>
	
	<!-- <mvc:annotation-driven /> -->

	<!-- <mvc:default-servlet-handler /> -->
	<!-- 静态资源不拦截 -->
	<mvc:resources mapping="/js/**" location="/static_resources/javascript/" />
	<mvc:resources mapping="/styles/**" location="/static_resources/css/" />
	<mvc:resources mapping="/images/**" location="/static_resources/images/" />

	<!-- Interceptors -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.sdsj.audio.web.common.interceptors.LoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>


	<!-- Beetl -->
	<bean id="beetlConfig"
		class="com.sdsj.audio.web.common.beetl.SdBeetlGroupUtilConfiguration"
		init-method="init" />
	<bean id="viewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>

	<!-- Mybatis -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/sdsj?useUnicode=yes&amp;characterEncoding=UTF8" />
		<!-- <property name="url" value="jdbc:mysql://10.168.2.42:3336/sdsj?useUnicode=yes&amp;characterEncoding=UTF8"/> -->
		<property name="username" value="sdsj" />
		<property name="password" value="sdsj" />
	</bean>

	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>
		<!-- mapper扫描 -->
		<property name="mapperLocations" value="classpath:mybatis/**/*Mapper.xml"></property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sdsj.audio.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- File upload -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!--配置事物管理器 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 事物处理 -->
	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(* com.sdsj.audio.service..*(..))" />
		<aop:advisor pointcut-ref="pc" advice-ref="txAdvice" />
	</aop:config>

	<!--bean工厂 -->
	<bean id="beanFactory" class="com.sdsj.audio.web.common.factory.BeanFactory" />
	
</beans>